name: "test"
on:
  pull_request:
  push:
    branches:
      - main
      - "releases/*"

permissions:
  contents: write
  pull-requests: write

# run integrated tests
jobs:
  list:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v3
      - id: list
        uses: ./list/
        with:
          working-directory: "__tests__/testdata/fuzz"
    outputs:
      fuzz-tests: ${{steps.list.outputs.fuzz-tests}}

  fuzz:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: list
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson(needs.list.outputs.fuzz-tests)}}
    steps:
      - uses: actions/checkout@v3
      - id: fuzz
        uses: ./run/
        with:
          working-directory: "__tests__/testdata/fuzz"
          packages: ${{ matrix.package }}
          fuzz-regexp: ${{ matrix.func }}
          fuzz-time: 5s

      - name: cleanup
        if: steps.fuzz.outputs.found
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh pr close --delete-branch ${{ steps.fuzz.outputs.pull-request-number }}

  slack:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: list
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson(needs.list.outputs.fuzz-tests)}}
    env:
      SLACK_INCOMING_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
    steps:
      - uses: actions/checkout@v3
      - id: fuzz
        if: env.SLACK_INCOMING_WEBHOOK
        uses: ./run/
        with:
          working-directory: "__tests__/testdata/fuzz"
          packages: ${{ matrix.package }}
          fuzz-regexp: ${{ matrix.func }}
          fuzz-time: 5s
          report-method: slack
          webhook-url: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
